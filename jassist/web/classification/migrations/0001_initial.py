# Generated by Django 4.2.21 on 2025-05-08 15:22

from django.db import migrations, models
import jassist.web.classification.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ClassificationConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assistant_name', models.CharField(default='Classification Assistant', max_length=100)),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(default='gpt-4o', max_length=50)),
                ('temperature', models.FloatField(default=0.2)),
                ('max_tokens', models.IntegerField(default=1000)),
                ('top_p', models.FloatField(default=1.0)),
                ('frequency_penalty', models.FloatField(default=0.0)),
                ('presence_penalty', models.FloatField(default=0.0)),
                ('save_usage_stats', models.BooleanField(default=True)),
                ('thread_retention_days', models.IntegerField(default=30)),
                ('default_response_format', models.CharField(default='json', max_length=20)),
                ('tools', models.JSONField(default=list)),
                ('assistant_id', models.CharField(blank=True, max_length=100)),
                ('persistent_thread_id', models.CharField(blank=True, max_length=100)),
                ('persistent_thread_created_at', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Classification Configuration',
                'verbose_name_plural': 'Classification Configuration',
            },
        ),
        migrations.CreateModel(
            name='ClassificationPrompt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('template', models.TextField()),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Classification Prompt',
                'verbose_name_plural': 'Classification Prompts',
            },
        ),
        migrations.CreateModel(
            name='TranscriptionClassificationBatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(default=jassist.web.classification.models.generate_uuid, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('total_records', models.IntegerField(default=0)),
                ('processed_records', models.IntegerField(default=0)),
                ('successful_records', models.IntegerField(default=0)),
                ('failed_records', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('total_tokens', models.IntegerField(default=0)),
                ('total_cost_usd', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('error_message', models.TextField(blank=True)),
                ('dry_run', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Transcription Classification Batch',
                'verbose_name_plural': 'Transcription Classification Batches',
                'indexes': [models.Index(fields=['batch_id'], name='classificat_batch_i_960c9b_idx'), models.Index(fields=['status'], name='classificat_status_50111e_idx'), models.Index(fields=['created_at'], name='classificat_created_d81a62_idx')],
            },
        ),
        migrations.CreateModel(
            name='ClassificationMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_id', models.CharField(blank=True, max_length=100)),
                ('job_id', models.IntegerField(blank=True, null=True)),
                ('prompt_tokens', models.IntegerField(default=0)),
                ('completion_tokens', models.IntegerField(default=0)),
                ('total_tokens', models.IntegerField(default=0)),
                ('processing_time_ms', models.IntegerField(default=0)),
                ('estimated_cost_usd', models.DecimalField(decimal_places=6, default=0, max_digits=10)),
                ('success', models.BooleanField(default=True)),
                ('error_message', models.TextField(blank=True)),
                ('model_used', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Classification Metric',
                'verbose_name_plural': 'Classification Metrics',
                'indexes': [models.Index(fields=['created_at'], name='classificat_created_f47ba8_idx'), models.Index(fields=['batch_id'], name='classificat_batch_i_807c95_idx'), models.Index(fields=['job_id'], name='classificat_job_id_2d0fbb_idx')],
            },
        ),
    ]
